// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Documents/InvoiceDocument.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "InvoiceDocument.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Diadoc {
namespace Api {
namespace Proto {
namespace Documents {
namespace InvoiceDocument {

namespace {

const ::google::protobuf::Descriptor* InvoiceMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvoiceMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvoiceRevisionMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvoiceRevisionMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvoiceCorrectionMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvoiceCorrectionMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* InvoiceCorrectionRevisionMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InvoiceCorrectionRevisionMetadata_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* InvoiceStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Documents_2fInvoiceDocument_2eproto() {
  protobuf_AddDesc_Documents_2fInvoiceDocument_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Documents/InvoiceDocument.proto");
  GOOGLE_CHECK(file != NULL);
  InvoiceMetadata_descriptor_ = file->message_type(0);
  static const int InvoiceMetadata_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceMetadata, invoicestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceMetadata, total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceMetadata, vat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceMetadata, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceMetadata, confirmationdatetimeticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceMetadata, invoiceamendmentflags_),
  };
  InvoiceMetadata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvoiceMetadata_descriptor_,
      InvoiceMetadata::default_instance_,
      InvoiceMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceMetadata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceMetadata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvoiceMetadata));
  InvoiceRevisionMetadata_descriptor_ = file->message_type(1);
  static const int InvoiceRevisionMetadata_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceRevisionMetadata, invoicerevisionstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceRevisionMetadata, originalinvoicenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceRevisionMetadata, originalinvoicedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceRevisionMetadata, total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceRevisionMetadata, vat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceRevisionMetadata, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceRevisionMetadata, confirmationdatetimeticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceRevisionMetadata, invoiceamendmentflags_),
  };
  InvoiceRevisionMetadata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvoiceRevisionMetadata_descriptor_,
      InvoiceRevisionMetadata::default_instance_,
      InvoiceRevisionMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceRevisionMetadata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceRevisionMetadata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvoiceRevisionMetadata));
  InvoiceCorrectionMetadata_descriptor_ = file->message_type(2);
  static const int InvoiceCorrectionMetadata_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, invoicecorrectionstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, originalinvoicenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, originalinvoicedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, originalinvoicerevisionnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, originalinvoicerevisiondate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, totalinc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, totaldec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, vatinc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, vatdec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, confirmationdatetimeticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, invoiceamendmentflags_),
  };
  InvoiceCorrectionMetadata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvoiceCorrectionMetadata_descriptor_,
      InvoiceCorrectionMetadata::default_instance_,
      InvoiceCorrectionMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionMetadata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvoiceCorrectionMetadata));
  InvoiceCorrectionRevisionMetadata_descriptor_ = file->message_type(3);
  static const int InvoiceCorrectionRevisionMetadata_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, invoicecorrectionrevisionstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, originalinvoicenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, originalinvoicedate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, originalinvoicerevisionnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, originalinvoicerevisiondate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, originalinvoicecorrectionnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, originalinvoicecorrectiondate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, totalinc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, totaldec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, vatinc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, vatdec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, confirmationdatetimeticks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, invoiceamendmentflags_),
  };
  InvoiceCorrectionRevisionMetadata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      InvoiceCorrectionRevisionMetadata_descriptor_,
      InvoiceCorrectionRevisionMetadata::default_instance_,
      InvoiceCorrectionRevisionMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InvoiceCorrectionRevisionMetadata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(InvoiceCorrectionRevisionMetadata));
  InvoiceStatus_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Documents_2fInvoiceDocument_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvoiceMetadata_descriptor_, &InvoiceMetadata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvoiceRevisionMetadata_descriptor_, &InvoiceRevisionMetadata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvoiceCorrectionMetadata_descriptor_, &InvoiceCorrectionMetadata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    InvoiceCorrectionRevisionMetadata_descriptor_, &InvoiceCorrectionRevisionMetadata::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Documents_2fInvoiceDocument_2eproto() {
  delete InvoiceMetadata::default_instance_;
  delete InvoiceMetadata_reflection_;
  delete InvoiceRevisionMetadata::default_instance_;
  delete InvoiceRevisionMetadata_reflection_;
  delete InvoiceCorrectionMetadata::default_instance_;
  delete InvoiceCorrectionMetadata_reflection_;
  delete InvoiceCorrectionRevisionMetadata::default_instance_;
  delete InvoiceCorrectionRevisionMetadata_reflection_;
}

void protobuf_AddDesc_Documents_2fInvoiceDocument_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037Documents/InvoiceDocument.proto\022*Diado"
    "c.Api.Proto.Documents.InvoiceDocument\"\351\001"
    "\n\017InvoiceMetadata\022f\n\rInvoiceStatus\030\001 \001(\016"
    "29.Diadoc.Api.Proto.Documents.InvoiceDoc"
    "ument.InvoiceStatus:\024UnknownInvoiceStatu"
    "s\022\r\n\005Total\030\002 \002(\t\022\013\n\003Vat\030\003 \002(\t\022\020\n\010Currenc"
    "y\030\004 \002(\005\022!\n\031ConfirmationDateTimeTicks\030\005 \002"
    "(\020\022\035\n\025InvoiceAmendmentFlags\030\006 \002(\005\"\265\002\n\027In"
    "voiceRevisionMetadata\022n\n\025InvoiceRevision"
    "Status\030\001 \001(\01629.Diadoc.Api.Proto.Document"
    "s.InvoiceDocument.InvoiceStatus:\024Unknown"
    "InvoiceStatus\022\035\n\025OriginalInvoiceNumber\030\002"
    " \002(\t\022\033\n\023OriginalInvoiceDate\030\003 \002(\t\022\r\n\005Tot"
    "al\030\004 \002(\t\022\013\n\003Vat\030\005 \002(\t\022\020\n\010Currency\030\006 \002(\005\022"
    "!\n\031ConfirmationDateTimeTicks\030\007 \002(\020\022\035\n\025In"
    "voiceAmendmentFlags\030\010 \002(\005\"\255\003\n\031InvoiceCor"
    "rectionMetadata\022p\n\027InvoiceCorrectionStat"
    "us\030\001 \001(\01629.Diadoc.Api.Proto.Documents.In"
    "voiceDocument.InvoiceStatus:\024UnknownInvo"
    "iceStatus\022\035\n\025OriginalInvoiceNumber\030\002 \002(\t"
    "\022\033\n\023OriginalInvoiceDate\030\003 \002(\t\022%\n\035Origina"
    "lInvoiceRevisionNumber\030\004 \001(\t\022#\n\033Original"
    "InvoiceRevisionDate\030\005 \001(\t\022\020\n\010TotalInc\030\006 "
    "\002(\t\022\020\n\010TotalDec\030\007 \002(\t\022\016\n\006VatInc\030\010 \002(\t\022\016\n"
    "\006VatDec\030\t \002(\t\022\020\n\010Currency\030\n \002(\005\022!\n\031Confi"
    "rmationDateTimeTicks\030\013 \002(\020\022\035\n\025InvoiceAme"
    "ndmentFlags\030\014 \002(\005\"\215\004\n!InvoiceCorrectionR"
    "evisionMetadata\022x\n\037InvoiceCorrectionRevi"
    "sionStatus\030\001 \001(\01629.Diadoc.Api.Proto.Docu"
    "ments.InvoiceDocument.InvoiceStatus:\024Unk"
    "nownInvoiceStatus\022\035\n\025OriginalInvoiceNumb"
    "er\030\002 \002(\t\022\033\n\023OriginalInvoiceDate\030\003 \002(\t\022%\n"
    "\035OriginalInvoiceRevisionNumber\030\004 \001(\t\022#\n\033"
    "OriginalInvoiceRevisionDate\030\005 \001(\t\022\'\n\037Ori"
    "ginalInvoiceCorrectionNumber\030\006 \002(\t\022%\n\035Or"
    "iginalInvoiceCorrectionDate\030\007 \002(\t\022\020\n\010Tot"
    "alInc\030\010 \002(\t\022\020\n\010TotalDec\030\t \002(\t\022\016\n\006VatInc\030"
    "\n \002(\t\022\016\n\006VatDec\030\013 \002(\t\022\020\n\010Currency\030\014 \002(\005\022"
    "!\n\031ConfirmationDateTimeTicks\030\r \002(\020\022\035\n\025In"
    "voiceAmendmentFlags\030\016 \002(\005*\366\001\n\rInvoiceSta"
    "tus\022\030\n\024UnknownInvoiceStatus\020\000\022$\n Outboun"
    "dWaitingForInvoiceReceipt\020\001\022\027\n\023OutboundN"
    "otFinished\020\002\022\024\n\020OutboundFinished\020\003\022%\n!Ou"
    "tboundWaitingForSenderSignature\020\006\022\"\n\036Out"
    "boundInvalidSenderSignature\020\007\022\026\n\022Inbound"
    "NotFinished\020\004\022\023\n\017InboundFinished\020\005", 1834);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Documents/InvoiceDocument.proto", &protobuf_RegisterTypes);
  InvoiceMetadata::default_instance_ = new InvoiceMetadata();
  InvoiceRevisionMetadata::default_instance_ = new InvoiceRevisionMetadata();
  InvoiceCorrectionMetadata::default_instance_ = new InvoiceCorrectionMetadata();
  InvoiceCorrectionRevisionMetadata::default_instance_ = new InvoiceCorrectionRevisionMetadata();
  InvoiceMetadata::default_instance_->InitAsDefaultInstance();
  InvoiceRevisionMetadata::default_instance_->InitAsDefaultInstance();
  InvoiceCorrectionMetadata::default_instance_->InitAsDefaultInstance();
  InvoiceCorrectionRevisionMetadata::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Documents_2fInvoiceDocument_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Documents_2fInvoiceDocument_2eproto {
  StaticDescriptorInitializer_Documents_2fInvoiceDocument_2eproto() {
    protobuf_AddDesc_Documents_2fInvoiceDocument_2eproto();
  }
} static_descriptor_initializer_Documents_2fInvoiceDocument_2eproto_;
const ::google::protobuf::EnumDescriptor* InvoiceStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvoiceStatus_descriptor_;
}
bool InvoiceStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int InvoiceMetadata::kInvoiceStatusFieldNumber;
const int InvoiceMetadata::kTotalFieldNumber;
const int InvoiceMetadata::kVatFieldNumber;
const int InvoiceMetadata::kCurrencyFieldNumber;
const int InvoiceMetadata::kConfirmationDateTimeTicksFieldNumber;
const int InvoiceMetadata::kInvoiceAmendmentFlagsFieldNumber;
#endif  // !_MSC_VER

InvoiceMetadata::InvoiceMetadata()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InvoiceMetadata::InitAsDefaultInstance() {
}

InvoiceMetadata::InvoiceMetadata(const InvoiceMetadata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InvoiceMetadata::SharedCtor() {
  _cached_size_ = 0;
  invoicestatus_ = 0;
  total_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  vat_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  currency_ = 0;
  confirmationdatetimeticks_ = GOOGLE_LONGLONG(0);
  invoiceamendmentflags_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvoiceMetadata::~InvoiceMetadata() {
  SharedDtor();
}

void InvoiceMetadata::SharedDtor() {
  if (total_ != &::google::protobuf::internal::kEmptyString) {
    delete total_;
  }
  if (vat_ != &::google::protobuf::internal::kEmptyString) {
    delete vat_;
  }
  if (this != default_instance_) {
  }
}

void InvoiceMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvoiceMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvoiceMetadata_descriptor_;
}

const InvoiceMetadata& InvoiceMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Documents_2fInvoiceDocument_2eproto();
  return *default_instance_;
}

InvoiceMetadata* InvoiceMetadata::default_instance_ = NULL;

InvoiceMetadata* InvoiceMetadata::New() const {
  return new InvoiceMetadata;
}

void InvoiceMetadata::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    invoicestatus_ = 0;
    if (has_total()) {
      if (total_ != &::google::protobuf::internal::kEmptyString) {
        total_->clear();
      }
    }
    if (has_vat()) {
      if (vat_ != &::google::protobuf::internal::kEmptyString) {
        vat_->clear();
      }
    }
    currency_ = 0;
    confirmationdatetimeticks_ = GOOGLE_LONGLONG(0);
    invoiceamendmentflags_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InvoiceMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceStatus = 1 [default = UnknownInvoiceStatus];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceStatus_IsValid(value)) {
            set_invoicestatus(static_cast< ::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_Total;
        break;
      }

      // required string Total = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Total:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_total()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->total().data(), this->total().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_Vat;
        break;
      }

      // required string Vat = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Vat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->vat().data(), this->vat().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_Currency;
        break;
      }

      // required int32 Currency = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Currency:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currency_)));
          set_has_currency();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(41)) goto parse_ConfirmationDateTimeTicks;
        break;
      }

      // required sfixed64 ConfirmationDateTimeTicks = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_ConfirmationDateTimeTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &confirmationdatetimeticks_)));
          set_has_confirmationdatetimeticks();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_InvoiceAmendmentFlags;
        break;
      }

      // required int32 InvoiceAmendmentFlags = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_InvoiceAmendmentFlags:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invoiceamendmentflags_)));
          set_has_invoiceamendmentflags();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InvoiceMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceStatus = 1 [default = UnknownInvoiceStatus];
  if (has_invoicestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->invoicestatus(), output);
  }

  // required string Total = 2;
  if (has_total()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->total().data(), this->total().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->total(), output);
  }

  // required string Vat = 3;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->vat(), output);
  }

  // required int32 Currency = 4;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->currency(), output);
  }

  // required sfixed64 ConfirmationDateTimeTicks = 5;
  if (has_confirmationdatetimeticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(5, this->confirmationdatetimeticks(), output);
  }

  // required int32 InvoiceAmendmentFlags = 6;
  if (has_invoiceamendmentflags()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->invoiceamendmentflags(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InvoiceMetadata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceStatus = 1 [default = UnknownInvoiceStatus];
  if (has_invoicestatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->invoicestatus(), target);
  }

  // required string Total = 2;
  if (has_total()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->total().data(), this->total().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->total(), target);
  }

  // required string Vat = 3;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vat(), target);
  }

  // required int32 Currency = 4;
  if (has_currency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->currency(), target);
  }

  // required sfixed64 ConfirmationDateTimeTicks = 5;
  if (has_confirmationdatetimeticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(5, this->confirmationdatetimeticks(), target);
  }

  // required int32 InvoiceAmendmentFlags = 6;
  if (has_invoiceamendmentflags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->invoiceamendmentflags(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InvoiceMetadata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceStatus = 1 [default = UnknownInvoiceStatus];
    if (has_invoicestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->invoicestatus());
    }

    // required string Total = 2;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->total());
    }

    // required string Vat = 3;
    if (has_vat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vat());
    }

    // required int32 Currency = 4;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currency());
    }

    // required sfixed64 ConfirmationDateTimeTicks = 5;
    if (has_confirmationdatetimeticks()) {
      total_size += 1 + 8;
    }

    // required int32 InvoiceAmendmentFlags = 6;
    if (has_invoiceamendmentflags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invoiceamendmentflags());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvoiceMetadata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InvoiceMetadata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InvoiceMetadata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InvoiceMetadata::MergeFrom(const InvoiceMetadata& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_invoicestatus()) {
      set_invoicestatus(from.invoicestatus());
    }
    if (from.has_total()) {
      set_total(from.total());
    }
    if (from.has_vat()) {
      set_vat(from.vat());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
    if (from.has_confirmationdatetimeticks()) {
      set_confirmationdatetimeticks(from.confirmationdatetimeticks());
    }
    if (from.has_invoiceamendmentflags()) {
      set_invoiceamendmentflags(from.invoiceamendmentflags());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InvoiceMetadata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvoiceMetadata::CopyFrom(const InvoiceMetadata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvoiceMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003e) != 0x0000003e) return false;

  return true;
}

void InvoiceMetadata::Swap(InvoiceMetadata* other) {
  if (other != this) {
    std::swap(invoicestatus_, other->invoicestatus_);
    std::swap(total_, other->total_);
    std::swap(vat_, other->vat_);
    std::swap(currency_, other->currency_);
    std::swap(confirmationdatetimeticks_, other->confirmationdatetimeticks_);
    std::swap(invoiceamendmentflags_, other->invoiceamendmentflags_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InvoiceMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvoiceMetadata_descriptor_;
  metadata.reflection = InvoiceMetadata_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InvoiceRevisionMetadata::kInvoiceRevisionStatusFieldNumber;
const int InvoiceRevisionMetadata::kOriginalInvoiceNumberFieldNumber;
const int InvoiceRevisionMetadata::kOriginalInvoiceDateFieldNumber;
const int InvoiceRevisionMetadata::kTotalFieldNumber;
const int InvoiceRevisionMetadata::kVatFieldNumber;
const int InvoiceRevisionMetadata::kCurrencyFieldNumber;
const int InvoiceRevisionMetadata::kConfirmationDateTimeTicksFieldNumber;
const int InvoiceRevisionMetadata::kInvoiceAmendmentFlagsFieldNumber;
#endif  // !_MSC_VER

InvoiceRevisionMetadata::InvoiceRevisionMetadata()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InvoiceRevisionMetadata::InitAsDefaultInstance() {
}

InvoiceRevisionMetadata::InvoiceRevisionMetadata(const InvoiceRevisionMetadata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InvoiceRevisionMetadata::SharedCtor() {
  _cached_size_ = 0;
  invoicerevisionstatus_ = 0;
  originalinvoicenumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  originalinvoicedate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  total_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  vat_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  currency_ = 0;
  confirmationdatetimeticks_ = GOOGLE_LONGLONG(0);
  invoiceamendmentflags_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvoiceRevisionMetadata::~InvoiceRevisionMetadata() {
  SharedDtor();
}

void InvoiceRevisionMetadata::SharedDtor() {
  if (originalinvoicenumber_ != &::google::protobuf::internal::kEmptyString) {
    delete originalinvoicenumber_;
  }
  if (originalinvoicedate_ != &::google::protobuf::internal::kEmptyString) {
    delete originalinvoicedate_;
  }
  if (total_ != &::google::protobuf::internal::kEmptyString) {
    delete total_;
  }
  if (vat_ != &::google::protobuf::internal::kEmptyString) {
    delete vat_;
  }
  if (this != default_instance_) {
  }
}

void InvoiceRevisionMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvoiceRevisionMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvoiceRevisionMetadata_descriptor_;
}

const InvoiceRevisionMetadata& InvoiceRevisionMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Documents_2fInvoiceDocument_2eproto();
  return *default_instance_;
}

InvoiceRevisionMetadata* InvoiceRevisionMetadata::default_instance_ = NULL;

InvoiceRevisionMetadata* InvoiceRevisionMetadata::New() const {
  return new InvoiceRevisionMetadata;
}

void InvoiceRevisionMetadata::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    invoicerevisionstatus_ = 0;
    if (has_originalinvoicenumber()) {
      if (originalinvoicenumber_ != &::google::protobuf::internal::kEmptyString) {
        originalinvoicenumber_->clear();
      }
    }
    if (has_originalinvoicedate()) {
      if (originalinvoicedate_ != &::google::protobuf::internal::kEmptyString) {
        originalinvoicedate_->clear();
      }
    }
    if (has_total()) {
      if (total_ != &::google::protobuf::internal::kEmptyString) {
        total_->clear();
      }
    }
    if (has_vat()) {
      if (vat_ != &::google::protobuf::internal::kEmptyString) {
        vat_->clear();
      }
    }
    currency_ = 0;
    confirmationdatetimeticks_ = GOOGLE_LONGLONG(0);
    invoiceamendmentflags_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InvoiceRevisionMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceRevisionStatus = 1 [default = UnknownInvoiceStatus];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceStatus_IsValid(value)) {
            set_invoicerevisionstatus(static_cast< ::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_OriginalInvoiceNumber;
        break;
      }

      // required string OriginalInvoiceNumber = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OriginalInvoiceNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalinvoicenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->originalinvoicenumber().data(), this->originalinvoicenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_OriginalInvoiceDate;
        break;
      }

      // required string OriginalInvoiceDate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OriginalInvoiceDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalinvoicedate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->originalinvoicedate().data(), this->originalinvoicedate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_Total;
        break;
      }

      // required string Total = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Total:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_total()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->total().data(), this->total().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_Vat;
        break;
      }

      // required string Vat = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Vat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vat()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->vat().data(), this->vat().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_Currency;
        break;
      }

      // required int32 Currency = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Currency:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currency_)));
          set_has_currency();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(57)) goto parse_ConfirmationDateTimeTicks;
        break;
      }

      // required sfixed64 ConfirmationDateTimeTicks = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_ConfirmationDateTimeTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &confirmationdatetimeticks_)));
          set_has_confirmationdatetimeticks();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_InvoiceAmendmentFlags;
        break;
      }

      // required int32 InvoiceAmendmentFlags = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_InvoiceAmendmentFlags:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invoiceamendmentflags_)));
          set_has_invoiceamendmentflags();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InvoiceRevisionMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceRevisionStatus = 1 [default = UnknownInvoiceStatus];
  if (has_invoicerevisionstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->invoicerevisionstatus(), output);
  }

  // required string OriginalInvoiceNumber = 2;
  if (has_originalinvoicenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicenumber().data(), this->originalinvoicenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->originalinvoicenumber(), output);
  }

  // required string OriginalInvoiceDate = 3;
  if (has_originalinvoicedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicedate().data(), this->originalinvoicedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->originalinvoicedate(), output);
  }

  // required string Total = 4;
  if (has_total()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->total().data(), this->total().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->total(), output);
  }

  // required string Vat = 5;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->vat(), output);
  }

  // required int32 Currency = 6;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->currency(), output);
  }

  // required sfixed64 ConfirmationDateTimeTicks = 7;
  if (has_confirmationdatetimeticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(7, this->confirmationdatetimeticks(), output);
  }

  // required int32 InvoiceAmendmentFlags = 8;
  if (has_invoiceamendmentflags()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->invoiceamendmentflags(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InvoiceRevisionMetadata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceRevisionStatus = 1 [default = UnknownInvoiceStatus];
  if (has_invoicerevisionstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->invoicerevisionstatus(), target);
  }

  // required string OriginalInvoiceNumber = 2;
  if (has_originalinvoicenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicenumber().data(), this->originalinvoicenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->originalinvoicenumber(), target);
  }

  // required string OriginalInvoiceDate = 3;
  if (has_originalinvoicedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicedate().data(), this->originalinvoicedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->originalinvoicedate(), target);
  }

  // required string Total = 4;
  if (has_total()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->total().data(), this->total().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->total(), target);
  }

  // required string Vat = 5;
  if (has_vat()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vat().data(), this->vat().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->vat(), target);
  }

  // required int32 Currency = 6;
  if (has_currency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->currency(), target);
  }

  // required sfixed64 ConfirmationDateTimeTicks = 7;
  if (has_confirmationdatetimeticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(7, this->confirmationdatetimeticks(), target);
  }

  // required int32 InvoiceAmendmentFlags = 8;
  if (has_invoiceamendmentflags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->invoiceamendmentflags(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InvoiceRevisionMetadata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceRevisionStatus = 1 [default = UnknownInvoiceStatus];
    if (has_invoicerevisionstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->invoicerevisionstatus());
    }

    // required string OriginalInvoiceNumber = 2;
    if (has_originalinvoicenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originalinvoicenumber());
    }

    // required string OriginalInvoiceDate = 3;
    if (has_originalinvoicedate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originalinvoicedate());
    }

    // required string Total = 4;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->total());
    }

    // required string Vat = 5;
    if (has_vat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vat());
    }

    // required int32 Currency = 6;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currency());
    }

    // required sfixed64 ConfirmationDateTimeTicks = 7;
    if (has_confirmationdatetimeticks()) {
      total_size += 1 + 8;
    }

    // required int32 InvoiceAmendmentFlags = 8;
    if (has_invoiceamendmentflags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invoiceamendmentflags());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvoiceRevisionMetadata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InvoiceRevisionMetadata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InvoiceRevisionMetadata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InvoiceRevisionMetadata::MergeFrom(const InvoiceRevisionMetadata& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_invoicerevisionstatus()) {
      set_invoicerevisionstatus(from.invoicerevisionstatus());
    }
    if (from.has_originalinvoicenumber()) {
      set_originalinvoicenumber(from.originalinvoicenumber());
    }
    if (from.has_originalinvoicedate()) {
      set_originalinvoicedate(from.originalinvoicedate());
    }
    if (from.has_total()) {
      set_total(from.total());
    }
    if (from.has_vat()) {
      set_vat(from.vat());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
    if (from.has_confirmationdatetimeticks()) {
      set_confirmationdatetimeticks(from.confirmationdatetimeticks());
    }
    if (from.has_invoiceamendmentflags()) {
      set_invoiceamendmentflags(from.invoiceamendmentflags());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InvoiceRevisionMetadata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvoiceRevisionMetadata::CopyFrom(const InvoiceRevisionMetadata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvoiceRevisionMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000fe) != 0x000000fe) return false;

  return true;
}

void InvoiceRevisionMetadata::Swap(InvoiceRevisionMetadata* other) {
  if (other != this) {
    std::swap(invoicerevisionstatus_, other->invoicerevisionstatus_);
    std::swap(originalinvoicenumber_, other->originalinvoicenumber_);
    std::swap(originalinvoicedate_, other->originalinvoicedate_);
    std::swap(total_, other->total_);
    std::swap(vat_, other->vat_);
    std::swap(currency_, other->currency_);
    std::swap(confirmationdatetimeticks_, other->confirmationdatetimeticks_);
    std::swap(invoiceamendmentflags_, other->invoiceamendmentflags_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InvoiceRevisionMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvoiceRevisionMetadata_descriptor_;
  metadata.reflection = InvoiceRevisionMetadata_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InvoiceCorrectionMetadata::kInvoiceCorrectionStatusFieldNumber;
const int InvoiceCorrectionMetadata::kOriginalInvoiceNumberFieldNumber;
const int InvoiceCorrectionMetadata::kOriginalInvoiceDateFieldNumber;
const int InvoiceCorrectionMetadata::kOriginalInvoiceRevisionNumberFieldNumber;
const int InvoiceCorrectionMetadata::kOriginalInvoiceRevisionDateFieldNumber;
const int InvoiceCorrectionMetadata::kTotalIncFieldNumber;
const int InvoiceCorrectionMetadata::kTotalDecFieldNumber;
const int InvoiceCorrectionMetadata::kVatIncFieldNumber;
const int InvoiceCorrectionMetadata::kVatDecFieldNumber;
const int InvoiceCorrectionMetadata::kCurrencyFieldNumber;
const int InvoiceCorrectionMetadata::kConfirmationDateTimeTicksFieldNumber;
const int InvoiceCorrectionMetadata::kInvoiceAmendmentFlagsFieldNumber;
#endif  // !_MSC_VER

InvoiceCorrectionMetadata::InvoiceCorrectionMetadata()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InvoiceCorrectionMetadata::InitAsDefaultInstance() {
}

InvoiceCorrectionMetadata::InvoiceCorrectionMetadata(const InvoiceCorrectionMetadata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InvoiceCorrectionMetadata::SharedCtor() {
  _cached_size_ = 0;
  invoicecorrectionstatus_ = 0;
  originalinvoicenumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  originalinvoicedate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  originalinvoicerevisionnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  originalinvoicerevisiondate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  totalinc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  totaldec_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  vatinc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  vatdec_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  currency_ = 0;
  confirmationdatetimeticks_ = GOOGLE_LONGLONG(0);
  invoiceamendmentflags_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvoiceCorrectionMetadata::~InvoiceCorrectionMetadata() {
  SharedDtor();
}

void InvoiceCorrectionMetadata::SharedDtor() {
  if (originalinvoicenumber_ != &::google::protobuf::internal::kEmptyString) {
    delete originalinvoicenumber_;
  }
  if (originalinvoicedate_ != &::google::protobuf::internal::kEmptyString) {
    delete originalinvoicedate_;
  }
  if (originalinvoicerevisionnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete originalinvoicerevisionnumber_;
  }
  if (originalinvoicerevisiondate_ != &::google::protobuf::internal::kEmptyString) {
    delete originalinvoicerevisiondate_;
  }
  if (totalinc_ != &::google::protobuf::internal::kEmptyString) {
    delete totalinc_;
  }
  if (totaldec_ != &::google::protobuf::internal::kEmptyString) {
    delete totaldec_;
  }
  if (vatinc_ != &::google::protobuf::internal::kEmptyString) {
    delete vatinc_;
  }
  if (vatdec_ != &::google::protobuf::internal::kEmptyString) {
    delete vatdec_;
  }
  if (this != default_instance_) {
  }
}

void InvoiceCorrectionMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvoiceCorrectionMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvoiceCorrectionMetadata_descriptor_;
}

const InvoiceCorrectionMetadata& InvoiceCorrectionMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Documents_2fInvoiceDocument_2eproto();
  return *default_instance_;
}

InvoiceCorrectionMetadata* InvoiceCorrectionMetadata::default_instance_ = NULL;

InvoiceCorrectionMetadata* InvoiceCorrectionMetadata::New() const {
  return new InvoiceCorrectionMetadata;
}

void InvoiceCorrectionMetadata::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    invoicecorrectionstatus_ = 0;
    if (has_originalinvoicenumber()) {
      if (originalinvoicenumber_ != &::google::protobuf::internal::kEmptyString) {
        originalinvoicenumber_->clear();
      }
    }
    if (has_originalinvoicedate()) {
      if (originalinvoicedate_ != &::google::protobuf::internal::kEmptyString) {
        originalinvoicedate_->clear();
      }
    }
    if (has_originalinvoicerevisionnumber()) {
      if (originalinvoicerevisionnumber_ != &::google::protobuf::internal::kEmptyString) {
        originalinvoicerevisionnumber_->clear();
      }
    }
    if (has_originalinvoicerevisiondate()) {
      if (originalinvoicerevisiondate_ != &::google::protobuf::internal::kEmptyString) {
        originalinvoicerevisiondate_->clear();
      }
    }
    if (has_totalinc()) {
      if (totalinc_ != &::google::protobuf::internal::kEmptyString) {
        totalinc_->clear();
      }
    }
    if (has_totaldec()) {
      if (totaldec_ != &::google::protobuf::internal::kEmptyString) {
        totaldec_->clear();
      }
    }
    if (has_vatinc()) {
      if (vatinc_ != &::google::protobuf::internal::kEmptyString) {
        vatinc_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_vatdec()) {
      if (vatdec_ != &::google::protobuf::internal::kEmptyString) {
        vatdec_->clear();
      }
    }
    currency_ = 0;
    confirmationdatetimeticks_ = GOOGLE_LONGLONG(0);
    invoiceamendmentflags_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InvoiceCorrectionMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceCorrectionStatus = 1 [default = UnknownInvoiceStatus];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceStatus_IsValid(value)) {
            set_invoicecorrectionstatus(static_cast< ::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_OriginalInvoiceNumber;
        break;
      }

      // required string OriginalInvoiceNumber = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OriginalInvoiceNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalinvoicenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->originalinvoicenumber().data(), this->originalinvoicenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_OriginalInvoiceDate;
        break;
      }

      // required string OriginalInvoiceDate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OriginalInvoiceDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalinvoicedate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->originalinvoicedate().data(), this->originalinvoicedate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_OriginalInvoiceRevisionNumber;
        break;
      }

      // optional string OriginalInvoiceRevisionNumber = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OriginalInvoiceRevisionNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalinvoicerevisionnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->originalinvoicerevisionnumber().data(), this->originalinvoicerevisionnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_OriginalInvoiceRevisionDate;
        break;
      }

      // optional string OriginalInvoiceRevisionDate = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OriginalInvoiceRevisionDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalinvoicerevisiondate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->originalinvoicerevisiondate().data(), this->originalinvoicerevisiondate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_TotalInc;
        break;
      }

      // required string TotalInc = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TotalInc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalinc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->totalinc().data(), this->totalinc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_TotalDec;
        break;
      }

      // required string TotalDec = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TotalDec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totaldec()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->totaldec().data(), this->totaldec().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_VatInc;
        break;
      }

      // required string VatInc = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_VatInc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vatinc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->vatinc().data(), this->vatinc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_VatDec;
        break;
      }

      // required string VatDec = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_VatDec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vatdec()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->vatdec().data(), this->vatdec().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_Currency;
        break;
      }

      // required int32 Currency = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Currency:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currency_)));
          set_has_currency();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(89)) goto parse_ConfirmationDateTimeTicks;
        break;
      }

      // required sfixed64 ConfirmationDateTimeTicks = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_ConfirmationDateTimeTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &confirmationdatetimeticks_)));
          set_has_confirmationdatetimeticks();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_InvoiceAmendmentFlags;
        break;
      }

      // required int32 InvoiceAmendmentFlags = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_InvoiceAmendmentFlags:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invoiceamendmentflags_)));
          set_has_invoiceamendmentflags();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InvoiceCorrectionMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceCorrectionStatus = 1 [default = UnknownInvoiceStatus];
  if (has_invoicecorrectionstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->invoicecorrectionstatus(), output);
  }

  // required string OriginalInvoiceNumber = 2;
  if (has_originalinvoicenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicenumber().data(), this->originalinvoicenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->originalinvoicenumber(), output);
  }

  // required string OriginalInvoiceDate = 3;
  if (has_originalinvoicedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicedate().data(), this->originalinvoicedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->originalinvoicedate(), output);
  }

  // optional string OriginalInvoiceRevisionNumber = 4;
  if (has_originalinvoicerevisionnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicerevisionnumber().data(), this->originalinvoicerevisionnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->originalinvoicerevisionnumber(), output);
  }

  // optional string OriginalInvoiceRevisionDate = 5;
  if (has_originalinvoicerevisiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicerevisiondate().data(), this->originalinvoicerevisiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->originalinvoicerevisiondate(), output);
  }

  // required string TotalInc = 6;
  if (has_totalinc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->totalinc().data(), this->totalinc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->totalinc(), output);
  }

  // required string TotalDec = 7;
  if (has_totaldec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->totaldec().data(), this->totaldec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->totaldec(), output);
  }

  // required string VatInc = 8;
  if (has_vatinc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vatinc().data(), this->vatinc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->vatinc(), output);
  }

  // required string VatDec = 9;
  if (has_vatdec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vatdec().data(), this->vatdec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->vatdec(), output);
  }

  // required int32 Currency = 10;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->currency(), output);
  }

  // required sfixed64 ConfirmationDateTimeTicks = 11;
  if (has_confirmationdatetimeticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(11, this->confirmationdatetimeticks(), output);
  }

  // required int32 InvoiceAmendmentFlags = 12;
  if (has_invoiceamendmentflags()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->invoiceamendmentflags(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InvoiceCorrectionMetadata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceCorrectionStatus = 1 [default = UnknownInvoiceStatus];
  if (has_invoicecorrectionstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->invoicecorrectionstatus(), target);
  }

  // required string OriginalInvoiceNumber = 2;
  if (has_originalinvoicenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicenumber().data(), this->originalinvoicenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->originalinvoicenumber(), target);
  }

  // required string OriginalInvoiceDate = 3;
  if (has_originalinvoicedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicedate().data(), this->originalinvoicedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->originalinvoicedate(), target);
  }

  // optional string OriginalInvoiceRevisionNumber = 4;
  if (has_originalinvoicerevisionnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicerevisionnumber().data(), this->originalinvoicerevisionnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->originalinvoicerevisionnumber(), target);
  }

  // optional string OriginalInvoiceRevisionDate = 5;
  if (has_originalinvoicerevisiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicerevisiondate().data(), this->originalinvoicerevisiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->originalinvoicerevisiondate(), target);
  }

  // required string TotalInc = 6;
  if (has_totalinc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->totalinc().data(), this->totalinc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->totalinc(), target);
  }

  // required string TotalDec = 7;
  if (has_totaldec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->totaldec().data(), this->totaldec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->totaldec(), target);
  }

  // required string VatInc = 8;
  if (has_vatinc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vatinc().data(), this->vatinc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->vatinc(), target);
  }

  // required string VatDec = 9;
  if (has_vatdec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vatdec().data(), this->vatdec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->vatdec(), target);
  }

  // required int32 Currency = 10;
  if (has_currency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->currency(), target);
  }

  // required sfixed64 ConfirmationDateTimeTicks = 11;
  if (has_confirmationdatetimeticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(11, this->confirmationdatetimeticks(), target);
  }

  // required int32 InvoiceAmendmentFlags = 12;
  if (has_invoiceamendmentflags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->invoiceamendmentflags(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InvoiceCorrectionMetadata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceCorrectionStatus = 1 [default = UnknownInvoiceStatus];
    if (has_invoicecorrectionstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->invoicecorrectionstatus());
    }

    // required string OriginalInvoiceNumber = 2;
    if (has_originalinvoicenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originalinvoicenumber());
    }

    // required string OriginalInvoiceDate = 3;
    if (has_originalinvoicedate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originalinvoicedate());
    }

    // optional string OriginalInvoiceRevisionNumber = 4;
    if (has_originalinvoicerevisionnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originalinvoicerevisionnumber());
    }

    // optional string OriginalInvoiceRevisionDate = 5;
    if (has_originalinvoicerevisiondate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originalinvoicerevisiondate());
    }

    // required string TotalInc = 6;
    if (has_totalinc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totalinc());
    }

    // required string TotalDec = 7;
    if (has_totaldec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totaldec());
    }

    // required string VatInc = 8;
    if (has_vatinc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vatinc());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string VatDec = 9;
    if (has_vatdec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vatdec());
    }

    // required int32 Currency = 10;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currency());
    }

    // required sfixed64 ConfirmationDateTimeTicks = 11;
    if (has_confirmationdatetimeticks()) {
      total_size += 1 + 8;
    }

    // required int32 InvoiceAmendmentFlags = 12;
    if (has_invoiceamendmentflags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invoiceamendmentflags());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvoiceCorrectionMetadata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InvoiceCorrectionMetadata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InvoiceCorrectionMetadata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InvoiceCorrectionMetadata::MergeFrom(const InvoiceCorrectionMetadata& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_invoicecorrectionstatus()) {
      set_invoicecorrectionstatus(from.invoicecorrectionstatus());
    }
    if (from.has_originalinvoicenumber()) {
      set_originalinvoicenumber(from.originalinvoicenumber());
    }
    if (from.has_originalinvoicedate()) {
      set_originalinvoicedate(from.originalinvoicedate());
    }
    if (from.has_originalinvoicerevisionnumber()) {
      set_originalinvoicerevisionnumber(from.originalinvoicerevisionnumber());
    }
    if (from.has_originalinvoicerevisiondate()) {
      set_originalinvoicerevisiondate(from.originalinvoicerevisiondate());
    }
    if (from.has_totalinc()) {
      set_totalinc(from.totalinc());
    }
    if (from.has_totaldec()) {
      set_totaldec(from.totaldec());
    }
    if (from.has_vatinc()) {
      set_vatinc(from.vatinc());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_vatdec()) {
      set_vatdec(from.vatdec());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
    if (from.has_confirmationdatetimeticks()) {
      set_confirmationdatetimeticks(from.confirmationdatetimeticks());
    }
    if (from.has_invoiceamendmentflags()) {
      set_invoiceamendmentflags(from.invoiceamendmentflags());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InvoiceCorrectionMetadata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvoiceCorrectionMetadata::CopyFrom(const InvoiceCorrectionMetadata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvoiceCorrectionMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000fe6) != 0x00000fe6) return false;

  return true;
}

void InvoiceCorrectionMetadata::Swap(InvoiceCorrectionMetadata* other) {
  if (other != this) {
    std::swap(invoicecorrectionstatus_, other->invoicecorrectionstatus_);
    std::swap(originalinvoicenumber_, other->originalinvoicenumber_);
    std::swap(originalinvoicedate_, other->originalinvoicedate_);
    std::swap(originalinvoicerevisionnumber_, other->originalinvoicerevisionnumber_);
    std::swap(originalinvoicerevisiondate_, other->originalinvoicerevisiondate_);
    std::swap(totalinc_, other->totalinc_);
    std::swap(totaldec_, other->totaldec_);
    std::swap(vatinc_, other->vatinc_);
    std::swap(vatdec_, other->vatdec_);
    std::swap(currency_, other->currency_);
    std::swap(confirmationdatetimeticks_, other->confirmationdatetimeticks_);
    std::swap(invoiceamendmentflags_, other->invoiceamendmentflags_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InvoiceCorrectionMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvoiceCorrectionMetadata_descriptor_;
  metadata.reflection = InvoiceCorrectionMetadata_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int InvoiceCorrectionRevisionMetadata::kInvoiceCorrectionRevisionStatusFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kOriginalInvoiceNumberFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kOriginalInvoiceDateFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kOriginalInvoiceRevisionNumberFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kOriginalInvoiceRevisionDateFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kOriginalInvoiceCorrectionNumberFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kOriginalInvoiceCorrectionDateFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kTotalIncFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kTotalDecFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kVatIncFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kVatDecFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kCurrencyFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kConfirmationDateTimeTicksFieldNumber;
const int InvoiceCorrectionRevisionMetadata::kInvoiceAmendmentFlagsFieldNumber;
#endif  // !_MSC_VER

InvoiceCorrectionRevisionMetadata::InvoiceCorrectionRevisionMetadata()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void InvoiceCorrectionRevisionMetadata::InitAsDefaultInstance() {
}

InvoiceCorrectionRevisionMetadata::InvoiceCorrectionRevisionMetadata(const InvoiceCorrectionRevisionMetadata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void InvoiceCorrectionRevisionMetadata::SharedCtor() {
  _cached_size_ = 0;
  invoicecorrectionrevisionstatus_ = 0;
  originalinvoicenumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  originalinvoicedate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  originalinvoicerevisionnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  originalinvoicerevisiondate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  originalinvoicecorrectionnumber_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  originalinvoicecorrectiondate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  totalinc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  totaldec_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  vatinc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  vatdec_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  currency_ = 0;
  confirmationdatetimeticks_ = GOOGLE_LONGLONG(0);
  invoiceamendmentflags_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InvoiceCorrectionRevisionMetadata::~InvoiceCorrectionRevisionMetadata() {
  SharedDtor();
}

void InvoiceCorrectionRevisionMetadata::SharedDtor() {
  if (originalinvoicenumber_ != &::google::protobuf::internal::kEmptyString) {
    delete originalinvoicenumber_;
  }
  if (originalinvoicedate_ != &::google::protobuf::internal::kEmptyString) {
    delete originalinvoicedate_;
  }
  if (originalinvoicerevisionnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete originalinvoicerevisionnumber_;
  }
  if (originalinvoicerevisiondate_ != &::google::protobuf::internal::kEmptyString) {
    delete originalinvoicerevisiondate_;
  }
  if (originalinvoicecorrectionnumber_ != &::google::protobuf::internal::kEmptyString) {
    delete originalinvoicecorrectionnumber_;
  }
  if (originalinvoicecorrectiondate_ != &::google::protobuf::internal::kEmptyString) {
    delete originalinvoicecorrectiondate_;
  }
  if (totalinc_ != &::google::protobuf::internal::kEmptyString) {
    delete totalinc_;
  }
  if (totaldec_ != &::google::protobuf::internal::kEmptyString) {
    delete totaldec_;
  }
  if (vatinc_ != &::google::protobuf::internal::kEmptyString) {
    delete vatinc_;
  }
  if (vatdec_ != &::google::protobuf::internal::kEmptyString) {
    delete vatdec_;
  }
  if (this != default_instance_) {
  }
}

void InvoiceCorrectionRevisionMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InvoiceCorrectionRevisionMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InvoiceCorrectionRevisionMetadata_descriptor_;
}

const InvoiceCorrectionRevisionMetadata& InvoiceCorrectionRevisionMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Documents_2fInvoiceDocument_2eproto();
  return *default_instance_;
}

InvoiceCorrectionRevisionMetadata* InvoiceCorrectionRevisionMetadata::default_instance_ = NULL;

InvoiceCorrectionRevisionMetadata* InvoiceCorrectionRevisionMetadata::New() const {
  return new InvoiceCorrectionRevisionMetadata;
}

void InvoiceCorrectionRevisionMetadata::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    invoicecorrectionrevisionstatus_ = 0;
    if (has_originalinvoicenumber()) {
      if (originalinvoicenumber_ != &::google::protobuf::internal::kEmptyString) {
        originalinvoicenumber_->clear();
      }
    }
    if (has_originalinvoicedate()) {
      if (originalinvoicedate_ != &::google::protobuf::internal::kEmptyString) {
        originalinvoicedate_->clear();
      }
    }
    if (has_originalinvoicerevisionnumber()) {
      if (originalinvoicerevisionnumber_ != &::google::protobuf::internal::kEmptyString) {
        originalinvoicerevisionnumber_->clear();
      }
    }
    if (has_originalinvoicerevisiondate()) {
      if (originalinvoicerevisiondate_ != &::google::protobuf::internal::kEmptyString) {
        originalinvoicerevisiondate_->clear();
      }
    }
    if (has_originalinvoicecorrectionnumber()) {
      if (originalinvoicecorrectionnumber_ != &::google::protobuf::internal::kEmptyString) {
        originalinvoicecorrectionnumber_->clear();
      }
    }
    if (has_originalinvoicecorrectiondate()) {
      if (originalinvoicecorrectiondate_ != &::google::protobuf::internal::kEmptyString) {
        originalinvoicecorrectiondate_->clear();
      }
    }
    if (has_totalinc()) {
      if (totalinc_ != &::google::protobuf::internal::kEmptyString) {
        totalinc_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_totaldec()) {
      if (totaldec_ != &::google::protobuf::internal::kEmptyString) {
        totaldec_->clear();
      }
    }
    if (has_vatinc()) {
      if (vatinc_ != &::google::protobuf::internal::kEmptyString) {
        vatinc_->clear();
      }
    }
    if (has_vatdec()) {
      if (vatdec_ != &::google::protobuf::internal::kEmptyString) {
        vatdec_->clear();
      }
    }
    currency_ = 0;
    confirmationdatetimeticks_ = GOOGLE_LONGLONG(0);
    invoiceamendmentflags_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool InvoiceCorrectionRevisionMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceCorrectionRevisionStatus = 1 [default = UnknownInvoiceStatus];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceStatus_IsValid(value)) {
            set_invoicecorrectionrevisionstatus(static_cast< ::Diadoc::Api::Proto::Documents::InvoiceDocument::InvoiceStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_OriginalInvoiceNumber;
        break;
      }

      // required string OriginalInvoiceNumber = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OriginalInvoiceNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalinvoicenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->originalinvoicenumber().data(), this->originalinvoicenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_OriginalInvoiceDate;
        break;
      }

      // required string OriginalInvoiceDate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OriginalInvoiceDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalinvoicedate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->originalinvoicedate().data(), this->originalinvoicedate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_OriginalInvoiceRevisionNumber;
        break;
      }

      // optional string OriginalInvoiceRevisionNumber = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OriginalInvoiceRevisionNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalinvoicerevisionnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->originalinvoicerevisionnumber().data(), this->originalinvoicerevisionnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_OriginalInvoiceRevisionDate;
        break;
      }

      // optional string OriginalInvoiceRevisionDate = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OriginalInvoiceRevisionDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalinvoicerevisiondate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->originalinvoicerevisiondate().data(), this->originalinvoicerevisiondate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_OriginalInvoiceCorrectionNumber;
        break;
      }

      // required string OriginalInvoiceCorrectionNumber = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OriginalInvoiceCorrectionNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalinvoicecorrectionnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->originalinvoicecorrectionnumber().data(), this->originalinvoicecorrectionnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_OriginalInvoiceCorrectionDate;
        break;
      }

      // required string OriginalInvoiceCorrectionDate = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_OriginalInvoiceCorrectionDate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalinvoicecorrectiondate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->originalinvoicecorrectiondate().data(), this->originalinvoicecorrectiondate().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_TotalInc;
        break;
      }

      // required string TotalInc = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TotalInc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totalinc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->totalinc().data(), this->totalinc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_TotalDec;
        break;
      }

      // required string TotalDec = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_TotalDec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_totaldec()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->totaldec().data(), this->totaldec().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_VatInc;
        break;
      }

      // required string VatInc = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_VatInc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vatinc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->vatinc().data(), this->vatinc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_VatDec;
        break;
      }

      // required string VatDec = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_VatDec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vatdec()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->vatdec().data(), this->vatdec().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_Currency;
        break;
      }

      // required int32 Currency = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Currency:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currency_)));
          set_has_currency();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(105)) goto parse_ConfirmationDateTimeTicks;
        break;
      }

      // required sfixed64 ConfirmationDateTimeTicks = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_ConfirmationDateTimeTicks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &confirmationdatetimeticks_)));
          set_has_confirmationdatetimeticks();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_InvoiceAmendmentFlags;
        break;
      }

      // required int32 InvoiceAmendmentFlags = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_InvoiceAmendmentFlags:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invoiceamendmentflags_)));
          set_has_invoiceamendmentflags();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void InvoiceCorrectionRevisionMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceCorrectionRevisionStatus = 1 [default = UnknownInvoiceStatus];
  if (has_invoicecorrectionrevisionstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->invoicecorrectionrevisionstatus(), output);
  }

  // required string OriginalInvoiceNumber = 2;
  if (has_originalinvoicenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicenumber().data(), this->originalinvoicenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->originalinvoicenumber(), output);
  }

  // required string OriginalInvoiceDate = 3;
  if (has_originalinvoicedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicedate().data(), this->originalinvoicedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->originalinvoicedate(), output);
  }

  // optional string OriginalInvoiceRevisionNumber = 4;
  if (has_originalinvoicerevisionnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicerevisionnumber().data(), this->originalinvoicerevisionnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->originalinvoicerevisionnumber(), output);
  }

  // optional string OriginalInvoiceRevisionDate = 5;
  if (has_originalinvoicerevisiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicerevisiondate().data(), this->originalinvoicerevisiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->originalinvoicerevisiondate(), output);
  }

  // required string OriginalInvoiceCorrectionNumber = 6;
  if (has_originalinvoicecorrectionnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicecorrectionnumber().data(), this->originalinvoicecorrectionnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->originalinvoicecorrectionnumber(), output);
  }

  // required string OriginalInvoiceCorrectionDate = 7;
  if (has_originalinvoicecorrectiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicecorrectiondate().data(), this->originalinvoicecorrectiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->originalinvoicecorrectiondate(), output);
  }

  // required string TotalInc = 8;
  if (has_totalinc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->totalinc().data(), this->totalinc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->totalinc(), output);
  }

  // required string TotalDec = 9;
  if (has_totaldec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->totaldec().data(), this->totaldec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->totaldec(), output);
  }

  // required string VatInc = 10;
  if (has_vatinc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vatinc().data(), this->vatinc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->vatinc(), output);
  }

  // required string VatDec = 11;
  if (has_vatdec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vatdec().data(), this->vatdec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->vatdec(), output);
  }

  // required int32 Currency = 12;
  if (has_currency()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->currency(), output);
  }

  // required sfixed64 ConfirmationDateTimeTicks = 13;
  if (has_confirmationdatetimeticks()) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(13, this->confirmationdatetimeticks(), output);
  }

  // required int32 InvoiceAmendmentFlags = 14;
  if (has_invoiceamendmentflags()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->invoiceamendmentflags(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* InvoiceCorrectionRevisionMetadata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceCorrectionRevisionStatus = 1 [default = UnknownInvoiceStatus];
  if (has_invoicecorrectionrevisionstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->invoicecorrectionrevisionstatus(), target);
  }

  // required string OriginalInvoiceNumber = 2;
  if (has_originalinvoicenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicenumber().data(), this->originalinvoicenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->originalinvoicenumber(), target);
  }

  // required string OriginalInvoiceDate = 3;
  if (has_originalinvoicedate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicedate().data(), this->originalinvoicedate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->originalinvoicedate(), target);
  }

  // optional string OriginalInvoiceRevisionNumber = 4;
  if (has_originalinvoicerevisionnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicerevisionnumber().data(), this->originalinvoicerevisionnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->originalinvoicerevisionnumber(), target);
  }

  // optional string OriginalInvoiceRevisionDate = 5;
  if (has_originalinvoicerevisiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicerevisiondate().data(), this->originalinvoicerevisiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->originalinvoicerevisiondate(), target);
  }

  // required string OriginalInvoiceCorrectionNumber = 6;
  if (has_originalinvoicecorrectionnumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicecorrectionnumber().data(), this->originalinvoicecorrectionnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->originalinvoicecorrectionnumber(), target);
  }

  // required string OriginalInvoiceCorrectionDate = 7;
  if (has_originalinvoicecorrectiondate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->originalinvoicecorrectiondate().data(), this->originalinvoicecorrectiondate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->originalinvoicecorrectiondate(), target);
  }

  // required string TotalInc = 8;
  if (has_totalinc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->totalinc().data(), this->totalinc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->totalinc(), target);
  }

  // required string TotalDec = 9;
  if (has_totaldec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->totaldec().data(), this->totaldec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->totaldec(), target);
  }

  // required string VatInc = 10;
  if (has_vatinc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vatinc().data(), this->vatinc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->vatinc(), target);
  }

  // required string VatDec = 11;
  if (has_vatdec()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->vatdec().data(), this->vatdec().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->vatdec(), target);
  }

  // required int32 Currency = 12;
  if (has_currency()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->currency(), target);
  }

  // required sfixed64 ConfirmationDateTimeTicks = 13;
  if (has_confirmationdatetimeticks()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(13, this->confirmationdatetimeticks(), target);
  }

  // required int32 InvoiceAmendmentFlags = 14;
  if (has_invoiceamendmentflags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->invoiceamendmentflags(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int InvoiceCorrectionRevisionMetadata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .Diadoc.Api.Proto.Documents.InvoiceDocument.InvoiceStatus InvoiceCorrectionRevisionStatus = 1 [default = UnknownInvoiceStatus];
    if (has_invoicecorrectionrevisionstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->invoicecorrectionrevisionstatus());
    }

    // required string OriginalInvoiceNumber = 2;
    if (has_originalinvoicenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originalinvoicenumber());
    }

    // required string OriginalInvoiceDate = 3;
    if (has_originalinvoicedate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originalinvoicedate());
    }

    // optional string OriginalInvoiceRevisionNumber = 4;
    if (has_originalinvoicerevisionnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originalinvoicerevisionnumber());
    }

    // optional string OriginalInvoiceRevisionDate = 5;
    if (has_originalinvoicerevisiondate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originalinvoicerevisiondate());
    }

    // required string OriginalInvoiceCorrectionNumber = 6;
    if (has_originalinvoicecorrectionnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originalinvoicecorrectionnumber());
    }

    // required string OriginalInvoiceCorrectionDate = 7;
    if (has_originalinvoicecorrectiondate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->originalinvoicecorrectiondate());
    }

    // required string TotalInc = 8;
    if (has_totalinc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totalinc());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string TotalDec = 9;
    if (has_totaldec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->totaldec());
    }

    // required string VatInc = 10;
    if (has_vatinc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vatinc());
    }

    // required string VatDec = 11;
    if (has_vatdec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vatdec());
    }

    // required int32 Currency = 12;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->currency());
    }

    // required sfixed64 ConfirmationDateTimeTicks = 13;
    if (has_confirmationdatetimeticks()) {
      total_size += 1 + 8;
    }

    // required int32 InvoiceAmendmentFlags = 14;
    if (has_invoiceamendmentflags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invoiceamendmentflags());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InvoiceCorrectionRevisionMetadata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const InvoiceCorrectionRevisionMetadata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const InvoiceCorrectionRevisionMetadata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InvoiceCorrectionRevisionMetadata::MergeFrom(const InvoiceCorrectionRevisionMetadata& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_invoicecorrectionrevisionstatus()) {
      set_invoicecorrectionrevisionstatus(from.invoicecorrectionrevisionstatus());
    }
    if (from.has_originalinvoicenumber()) {
      set_originalinvoicenumber(from.originalinvoicenumber());
    }
    if (from.has_originalinvoicedate()) {
      set_originalinvoicedate(from.originalinvoicedate());
    }
    if (from.has_originalinvoicerevisionnumber()) {
      set_originalinvoicerevisionnumber(from.originalinvoicerevisionnumber());
    }
    if (from.has_originalinvoicerevisiondate()) {
      set_originalinvoicerevisiondate(from.originalinvoicerevisiondate());
    }
    if (from.has_originalinvoicecorrectionnumber()) {
      set_originalinvoicecorrectionnumber(from.originalinvoicecorrectionnumber());
    }
    if (from.has_originalinvoicecorrectiondate()) {
      set_originalinvoicecorrectiondate(from.originalinvoicecorrectiondate());
    }
    if (from.has_totalinc()) {
      set_totalinc(from.totalinc());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_totaldec()) {
      set_totaldec(from.totaldec());
    }
    if (from.has_vatinc()) {
      set_vatinc(from.vatinc());
    }
    if (from.has_vatdec()) {
      set_vatdec(from.vatdec());
    }
    if (from.has_currency()) {
      set_currency(from.currency());
    }
    if (from.has_confirmationdatetimeticks()) {
      set_confirmationdatetimeticks(from.confirmationdatetimeticks());
    }
    if (from.has_invoiceamendmentflags()) {
      set_invoiceamendmentflags(from.invoiceamendmentflags());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void InvoiceCorrectionRevisionMetadata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InvoiceCorrectionRevisionMetadata::CopyFrom(const InvoiceCorrectionRevisionMetadata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvoiceCorrectionRevisionMetadata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00003fe6) != 0x00003fe6) return false;

  return true;
}

void InvoiceCorrectionRevisionMetadata::Swap(InvoiceCorrectionRevisionMetadata* other) {
  if (other != this) {
    std::swap(invoicecorrectionrevisionstatus_, other->invoicecorrectionrevisionstatus_);
    std::swap(originalinvoicenumber_, other->originalinvoicenumber_);
    std::swap(originalinvoicedate_, other->originalinvoicedate_);
    std::swap(originalinvoicerevisionnumber_, other->originalinvoicerevisionnumber_);
    std::swap(originalinvoicerevisiondate_, other->originalinvoicerevisiondate_);
    std::swap(originalinvoicecorrectionnumber_, other->originalinvoicecorrectionnumber_);
    std::swap(originalinvoicecorrectiondate_, other->originalinvoicecorrectiondate_);
    std::swap(totalinc_, other->totalinc_);
    std::swap(totaldec_, other->totaldec_);
    std::swap(vatinc_, other->vatinc_);
    std::swap(vatdec_, other->vatdec_);
    std::swap(currency_, other->currency_);
    std::swap(confirmationdatetimeticks_, other->confirmationdatetimeticks_);
    std::swap(invoiceamendmentflags_, other->invoiceamendmentflags_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata InvoiceCorrectionRevisionMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InvoiceCorrectionRevisionMetadata_descriptor_;
  metadata.reflection = InvoiceCorrectionRevisionMetadata_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace InvoiceDocument
}  // namespace Documents
}  // namespace Proto
}  // namespace Api
}  // namespace Diadoc

// @@protoc_insertion_point(global_scope)
